/* eslint-disable @typescript-eslint/naming-convention,quote-props */
import stylistic from '@stylistic/eslint-plugin-ts';
import { configs } from 'typescript-eslint';

export default [
	configs.base,
	{
		files: ['**/*.js', '**/*.ts'],
		plugins: {
			'@stylistic': stylistic,
		},
		rules: {
			'no-console': 2,
			'no-constant-condition': 2,
			'no-dupe-args': 2,
			'no-dupe-keys': 2,
			'no-duplicate-case': 2,
			'no-empty-character-class': 2,
			'no-empty': 2,
			'no-ex-assign': 2,
			'no-func-assign': 2,
			'no-invalid-regexp': 2,
			'no-irregular-whitespace': 1,
			'no-regex-spaces': 2,
			'no-sparse-arrays': 2,
			'no-unexpected-multiline': 1,
			'no-unreachable': 2,
			'no-unsafe-finally': 2,
			'no-unsafe-negation': 2,
			'use-isnan': 1,
			'valid-typeof': 2,
			'array-callback-return': 1,
			'block-scoped-var': 1,
			'dot-notation': 2,
			'eqeqeq': [2, 'smart'],
			'no-alert': 2,
			'no-case-declarations': 2,
			'no-empty-pattern': 2,
			'no-eval': 2,
			'no-extra-bind': 2,
			'no-global-assign': 2,
			'no-implied-eval': 2,
			'no-invalid-this': 1,
			'no-iterator': 2,
			'no-labels': 2,
			'no-lone-blocks': 2,
			'no-loop-func': 2,
			'no-return-assign': 1,
			'no-self-assign': 1,
			'no-throw-literal': 2,
			'no-unused-expressions': 2,
			'no-useless-call': 2,
			'no-useless-concat': 1,
			'no-useless-escape': 2,
			'no-useless-return': 2,
			'no-void': 2,
			'no-with': 2,
			'radix': [2, 'as-needed'],
			'require-await': 2,
			'yoda': 2,
			'no-delete-var': 2,
			'no-shadow-restricted-names': 2,
			'no-use-before-define': 2,
			'camelcase': 1,
			'func-style': [1, 'declaration', { allowArrowFunctions: true }],
			'no-unneeded-ternary': 1,
			'operator-assignment': 1,
			'no-class-assign': 2,
			'no-const-assign': 2,
			'no-duplicate-imports': 2,
			'no-new-native-nonconstructor': 2,
			'no-useless-computed-key': 2,
			'no-useless-rename': 2,
			'object-shorthand': 1,
			'prefer-arrow-callback': 1,
			'require-yield': 2,
			'@typescript-eslint/array-type': [2, { default: 'array' }],
			'@typescript-eslint/consistent-type-imports': [2, { fixStyle: 'inline-type-imports' }],
			'@typescript-eslint/naming-convention': [2,
				{ selector: 'default', format: ['camelCase', 'StrictPascalCase', 'UPPER_CASE'] },
				{ selector: 'property', format: ['camelCase', 'StrictPascalCase'], leadingUnderscore: 'allow' },
				{ selector: 'enum', format: ['StrictPascalCase'] },
				{ selector: 'enumMember', format: ['StrictPascalCase'] },
				{ selector: 'typeAlias', format: ['StrictPascalCase'] },
				{ selector: 'typeParameter', format: ['StrictPascalCase'] },
				{ selector: 'class', format: ['StrictPascalCase'] },
				{ selector: 'interface', format: ['StrictPascalCase'], prefix: ['I'] },
			],
			'@typescript-eslint/no-array-constructor': 2,
			'@typescript-eslint/no-misused-new': 2,
			'@typescript-eslint/no-unused-vars': 2,
			'@typescript-eslint/no-use-before-define': 2,
			'@typescript-eslint/no-useless-constructor': 2,
			'@typescript-eslint/no-redeclare': 2,
			'@typescript-eslint/no-dupe-class-members': 2,
			'@stylistic/indent': [1, 'tab'],
			'@stylistic/member-delimiter-style': [2, {
				multiline: { delimiter: 'semi', requireLast: true },
				singleline: { delimiter: 'comma', requireLast: false },
			}],
			'@stylistic/arrow-spacing': 1,
			'@stylistic/block-spacing': [1, 'always'],
			'@stylistic/brace-style': [1, 'stroustrup', { allowSingleLine: true }],
			'@stylistic/comma-dangle': ['error', {
				arrays: 'always-multiline',
				objects: 'always-multiline',
				imports: 'never',
				exports: 'never',
				functions: 'ignore',
			}],
			'@stylistic/comma-spacing': 1,
			'@stylistic/comma-style': 1,
			'@stylistic/computed-property-spacing': 1,
			'@stylistic/func-call-spacing': 1,
			'@stylistic/key-spacing': 1,
			'@stylistic/no-extra-semi': 2,
			'@stylistic/new-parens': 2,
			'@stylistic/no-mixed-spaces-and-tabs': 2,
			'@stylistic/no-trailing-spaces': 2,
			'@stylistic/template-curly-spacing': 1,
			'@stylistic/space-in-parens': [1, 'never'],
			'@stylistic/space-infix-ops': 1,
			'@stylistic/space-unary-ops': [1, { words: true, nonwords: false }],
			'@stylistic/spaced-comment': 1,
			'@stylistic/no-whitespace-before-property': 1,
			'@stylistic/object-curly-spacing': [1, 'always'],
			'@stylistic/one-var-declaration-per-line': 1,
			'@stylistic/quote-props': [2, 'as-needed'],
			'@stylistic/quotes': [2, 'single', { allowTemplateLiterals: true }],
			'@stylistic/semi-spacing': 1,
			'@stylistic/semi': 2,
			'@stylistic/space-before-blocks': 1,
			'@stylistic/space-before-function-paren': [1, {
				anonymous: 'never',
				named: 'never',
				asyncArrow: 'always',
			}],
			'@stylistic/no-floating-decimal': 2,
			'@stylistic/no-multi-spaces': 1,
		},
	},
];
